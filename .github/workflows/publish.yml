name: Create Post on Release

on:
  workflow_dispatch:
  
jobs:
  create_post:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Octokit
        run: npm install @octokit/core

      - name: Retrieve Release Information
        id: release_info
        run: |
          const { Octokit } = require("@octokit/core");

          const octokit = new Octokit();

          const { data: releaseInfo } = await octokit.request("GET /repos/{owner}/{repo}/releases/latest", {
            owner: "Gamer64ytb",
            repo: "Lemonade"
          });

          const version = releaseInfo.tag_name;
          const releaseNotes = releaseInfo.body;
          const assets = releaseInfo.assets.map(asset => asset.browser_download_url);

          console.log(`Release Version: ${version}`);
          console.log(`Release Notes: ${releaseNotes}`);
          console.log(`Download Links: ${assets}`);

          // Pass release information to the next step
          console.log(JSON.stringify({ version: version, releaseNotes: releaseNotes, assets: assets }));
          core.setOutput('release_info', JSON.stringify({ version: version, releaseNotes: releaseNotes, assets: assets }));

      - name: Generate Post Content
        id: generate_post
        run: |
          # Use release information from the previous step to generate post content
          version=$(echo ${{ steps.release_info.outputs.release_info }} | jq -r .version)
          releaseNotes=$(echo ${{ steps.release_info.outputs.release_info }} | jq -r .releaseNotes)
          assets=$(echo ${{ steps.release_info.outputs.release_info }} | jq -r .assets)
          
          # Example: Generate post content with release information
          echo "---
          title: Release ${version}
          date: $(date +%FT%T%z)
          ---
          # Release Notes
          ${releaseNotes}

          # Download Links
          ${assets.map(asset => `- [${asset}](${asset})`).join('\n')}" > ${version}.md

      - name: Move Markdown File to Contents Folder
        run: |
          mv ${version}.md content/posts/

      - name: Commit and Push Changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Add new post for release ${{ steps.release_info.outputs.version }}"
          branch: master
